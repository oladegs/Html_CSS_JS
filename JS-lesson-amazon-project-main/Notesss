Git : track changes in our code and lets us easily undo our changes

Repository : a folder where changes are being tracked

## Main Idea of JS

1. Save the data - Model
2. Generate the HTML - View
3. Make it interactive - Controller

data - information ; information about our products

We usually use a combination of object and arrays to create a DS

How do we know which product to add?
Data Attribute:

- is just another HTML attribute
- allows us to attach any information to an element
- name on the left , value on the right
- have to start with "data-" kebab case
- then give it any name

Modules : a better way to organize our code

## Create a Module

1. Create a file
2. Dont load the file with <script></script>
   Any variables we create inside the file will be contained inside the file

## Get a variable out of a file

1. Add type="module" attribute : Lets this file get variables out of other files
2. Export
3. Import

- Always put modules at the top of the file ,use live server and dont run html files directly

## Benefits of module

1. Avoids naming conflict
2. Dont worry about order of files

- The amazon.js file is the entry point of the code
- Best practice : Group related code together into its own file

import \* as cartModule from '../data/cart.js'
cartModule.cart
cartModule.addToCart('id'); and then we can access as a property or a method

Normalizing the data : Normalization means organizing data to reduce redundancy and improve data integrity.

Sometimes it simply means cleaning or standardizing data â€” like trimming spaces, converting to lowercase, formatting dates, etc.

## External Libraries, MVC , Finish the Checkout Page

External Libraries: Code that is outside of our project >> How to put an HTML Website Online - learn how to put code online

## Uses:

- let us share code
- save time
- avoid duplicating work

## Best practice in programming to save time and energy

When we need smg complicated,

- Try to find an external library first
- Before writing the code ourselves

To find like date : javascript date library

## ESM Version

A version that works with JS Modules
ESM - Ecmascript Module
Ecmascript = Javascript

## Default Export

- another way of exporting
- we can use it when we only want to export 1 thing
- when we have a curly bracket , we call it Named Export
- not every library has an esm version , some libraries we still have a script tag

Normalizing Data : When we save data somewhere(Object) and we have an Id pointed to the data that was saved

For you to pass inaccessible variables , you can create a function and pass the variable as an argument

- Attribute 'checked' selector makes a selector checked

Recursion : A function can call / re-run itself

Instead of using the dom and updating the html one by one

- Update the data
- Regenerate all the HTML

MVC :
MODEL - VIEW - CONTROLLER

Split code into 3 parts:

Model : saves and manages the data
View : take the data and displays it on the page
Controller: runs some code when we interact with the page

MVC : makes sure the page always matches the data

Easiest way to test:

- Open the website and try out the code (Manual testing) ; Cons - is hard to test every situation, is hard to retest the code
- Using code to test code (Automated testing);
